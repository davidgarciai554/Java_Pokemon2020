/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.sql.Statement;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;

/**
 *
 * @author xp
 */
public class VentanaPokedex extends javax.swing.JFrame {

    BufferedImage buffer1 = null;
    Image imagen1 = null;
    int contador = 0;

    Statement estado;
    Connection conexion;
    ResultSet resultadoConsulta;

    //Declaramos el Hashmap (estructura para guardar el contenido de la base de datos)
    HashMap<String, Pokemon> listaPokemon = new HashMap();

    String _nombrePokemon;

    /**
     * Creates new form VentanaPokedex
     */
    public VentanaPokedex() {
        initComponents();

//        Color backgroundColor = Color.black;
//       descripcionPokemon.setBorder(BorderFactory.createLineBorder(backgroundColor, 2));
        Color bgColor = Color.BLACK;
        UIDefaults defaults = new UIDefaults();
        defaults.put("TextPane.background", new ColorUIResource(bgColor));
        defaults.put("TextPane[Enabled].backgroundPainter", bgColor);
        descripcionPokemon.putClientProperty("Nimbus.Overrides", defaults);
        descripcionPokemon.putClientProperty("Nimbus.Overrides.InheritDefaults", true);
        descripcionPokemon.setBackground(bgColor);
        try {
//            imagen1 = ImageIO.read(getClass().getResource("/imagenes/shinysPokemon.png"));
            imagen1 = ImageIO.read(getClass().getResource("/imagenes/black-white.png"));
        } catch (IOException ex) {
        }
        buffer1 = (BufferedImage) imagenPokemon.createImage(imagenPokemon.getWidth(), imagenPokemon.getHeight());

        Graphics2D g2 = buffer1.createGraphics();

        dibujaPokemon(contador);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conexion = DriverManager.getConnection("jdbc:mysql://127.0.0.1/test", "root", "");
            estado = conexion.createStatement();
            resultadoConsulta = estado.executeQuery("Select * from pokemon");
            System.out.println("Se ha conectado bien :D");

            //recorremos el array para cargarlo en el Hashmap
            while (resultadoConsulta.next()) {
                Pokemon p = new Pokemon();
                p.nombre = resultadoConsulta.getString(2);
                p.numPokedex = resultadoConsulta.getString(1);
                p.altura = resultadoConsulta.getString(3);
                p.descripcionPokemon = resultadoConsulta.getString(16);
                p.peso = resultadoConsulta.getString(4);
                p.habitat = resultadoConsulta.getString(6);
                p.especie = resultadoConsulta.getString(5);
                p.tipo1 = resultadoConsulta.getString(7);
                p.tipo2 = resultadoConsulta.getString(8);
                p.habilidad = resultadoConsulta.getString(9);
                p.mov1 = resultadoConsulta.getString(10);
                p.mov2 = resultadoConsulta.getString(11);
                p.mov3 = resultadoConsulta.getString(12);
                p.mov4 = resultadoConsulta.getString(13);

                listaPokemon.put(resultadoConsulta.getString(1), p);
            }

            sacaInfo(contador);

        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println("Error en la conexion a la base de datos");
        }

    }

    private void dibujaPokemon(int posicion) {
        int fila = posicion / 31;
        int columna = posicion % 31;

        Graphics2D g2 = (Graphics2D) buffer1.getGraphics();
        g2.setColor(Color.BLUE);
        g2.fillRect(0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight());

        g2.drawImage(imagen1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), columna * 96, fila * 96, columna * 96 + 96, fila * 96 + 96, null);
        repaint();
    }

    @Override
    public void paint(Graphics g) {
        super.paintComponents(g);
        Graphics g2 = (Graphics2D) imagenPokemon.getGraphics();
        g2.drawImage(buffer1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagenPokemon = new javax.swing.JPanel();
        izq = new javax.swing.JButton();
        der = new javax.swing.JButton();
        numPokedex = new java.awt.Label();
        altura = new java.awt.Label();
        peso = new java.awt.Label();
        habitat = new java.awt.Label();
        tipo = new java.awt.Label();
        habilidad = new java.awt.Label();
        especie = new java.awt.Label();
        mov1 = new java.awt.Label();
        mov3 = new java.awt.Label();
        mov2 = new java.awt.Label();
        mov4 = new java.awt.Label();
        movimientos = new java.awt.Label();
        espacio1 = new java.awt.Label();
        espacio2 = new java.awt.Label();
        espacio3 = new java.awt.Label();
        shiny = new javax.swing.JCheckBox();
        nombrePokemon = new java.awt.Label();
        descripcionPokemon = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imagenPokemon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout imagenPokemonLayout = new javax.swing.GroupLayout(imagenPokemon);
        imagenPokemon.setLayout(imagenPokemonLayout);
        imagenPokemonLayout.setHorizontalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );
        imagenPokemonLayout.setVerticalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 336, Short.MAX_VALUE)
        );

        getContentPane().add(imagenPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 350, 340));

        izq.setText("<");
        izq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izqActionPerformed(evt);
            }
        });
        getContentPane().add(izq, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 500, 60, 30));

        der.setText(">");
        der.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derActionPerformed(evt);
            }
        });
        getContentPane().add(der, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, 60, 30));

        numPokedex.setBackground(new java.awt.Color(0, 0, 0));
        numPokedex.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        numPokedex.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(numPokedex, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 130, 30));

        altura.setBackground(new java.awt.Color(0, 0, 0));
        altura.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        altura.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(altura, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, 130, 30));

        peso.setBackground(new java.awt.Color(0, 0, 0));
        peso.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        peso.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 130, 30));

        habitat.setBackground(new java.awt.Color(0, 0, 0));
        habitat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        habitat.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(habitat, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 250, 130, 30));

        tipo.setBackground(new java.awt.Color(0, 0, 0));
        tipo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tipo.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 130, 30));

        habilidad.setBackground(new java.awt.Color(0, 0, 0));
        habilidad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        habilidad.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(habilidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 280, 130, 30));

        especie.setBackground(new java.awt.Color(0, 0, 0));
        especie.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        especie.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(especie, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 250, 130, 30));

        mov1.setBackground(new java.awt.Color(0, 0, 0));
        mov1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mov1.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(mov1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 130, 30));

        mov3.setBackground(new java.awt.Color(0, 0, 0));
        mov3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mov3.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(mov3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 130, 30));

        mov2.setBackground(new java.awt.Color(0, 0, 0));
        mov2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mov2.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(mov2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 130, 30));

        mov4.setBackground(new java.awt.Color(0, 0, 0));
        mov4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mov4.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(mov4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 130, 30));

        movimientos.setBackground(new java.awt.Color(0, 0, 0));
        movimientos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        movimientos.setForeground(new java.awt.Color(51, 255, 0));
        movimientos.setText(" Movimientos:");
        getContentPane().add(movimientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, 130, 30));

        espacio1.setBackground(new java.awt.Color(0, 0, 0));
        espacio1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        espacio1.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(espacio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 130, 30));

        espacio2.setBackground(new java.awt.Color(0, 0, 0));
        espacio2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        espacio2.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(espacio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 340, 130, 30));

        espacio3.setBackground(new java.awt.Color(0, 0, 0));
        espacio3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        espacio3.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(espacio3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 310, 130, 30));

        shiny.setText("Variocolor");
        shiny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shinyActionPerformed(evt);
            }
        });
        getContentPane().add(shiny, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, -1, -1));

        nombrePokemon.setBackground(new java.awt.Color(0, 0, 0));
        nombrePokemon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nombrePokemon.setForeground(new java.awt.Color(51, 255, 0));
        getContentPane().add(nombrePokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 130, 30));

        descripcionPokemon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        descripcionPokemon.setForeground(new java.awt.Color(51, 255, 0));
        descripcionPokemon.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        getContentPane().add(descripcionPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 260, 80));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Pokedex.png"))); // NOI18N
        jLabel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel2KeyPressed(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void izqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izqActionPerformed
        contador--;
        if (contador < 0) {
            contador = 0;
        }
        dibujaPokemon(contador);
        sacaInfo(contador);


    }//GEN-LAST:event_izqActionPerformed

    private void derActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derActionPerformed

        contador++;
        if (contador >= 150) {
            contador = 150;
        }
        sacaInfo(contador);

        dibujaPokemon(contador);


    }//GEN-LAST:event_derActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed


    }//GEN-LAST:event_formKeyPressed

    private void jLabel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel2KeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_LEFT:
                contador--;
                if (contador < 0) {
                    contador = 0;
                }
                dibujaPokemon(contador);
                sacaInfo(contador);
                break;
            case KeyEvent.VK_RIGHT:
                contador++;
                if (contador >= 150) {
                    contador = 150;
                }
                sacaInfo(contador);
                dibujaPokemon(contador);
                break;
        }
    }//GEN-LAST:event_jLabel2KeyPressed

    private void shinyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shinyActionPerformed
        if (shiny.isSelected()) {
            try {
                imagen1 = ImageIO.read(getClass().getResource("/imagenes/shinysPokemon.png"));
            } catch (IOException ex) {
            }
        } else {
            try {
                imagen1 = ImageIO.read(getClass().getResource("/imagenes/black-white.png"));
            } catch (IOException ex) {
            }
        }

    }//GEN-LAST:event_shinyActionPerformed

    public class sonidoPokemon extends Thread {//Creamos un hilo para que  												

        public void run() {                     //reproduzca el sonido a la vez
            pokeSonido s = new pokeSonido(); //que sigue el juego
            s.ReproducirSonido(s.getClass().getResource("/sonidos/" + _nombrePokemon + ".wav").getFile());
        }
    }

    public void sacaInfo(int _contador) {
        Pokemon p = listaPokemon.get(String.valueOf(_contador + 1));
        if (p != null) {
            nombrePokemon.setText(p.nombre);
            numPokedex.setText(" Nº de Pokedex: " + p.numPokedex + "º");
            altura.setText(" Altura: " + p.altura + " m.");
            peso.setText(" Peso: " + p.peso + " Kg.");
            habitat.setText(" Habitat: " + p.habitat);
            descripcionPokemon.setText(p.descripcionPokemon);
            especie.setText(" Especie: " + p.especie);
            if (p.tipo2 != "") {
                tipo.setText(" Tipo: " + p.tipo1 + "/" + p.tipo2);
            } else {
                tipo.setText(" Tipo: " + p.tipo1);
            }
            habilidad.setText("Habilidad: " + p.habilidad);

            mov1.setText(" " + p.mov1);
            mov2.setText(p.mov2);
            mov3.setText(" " + p.mov3);
            mov4.setText(p.mov4);

            _nombrePokemon = p.nombre;
            sonidoPokemon s = new sonidoPokemon();
            s.start();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label altura;
    private javax.swing.JButton der;
    private javax.swing.JTextPane descripcionPokemon;
    private java.awt.Label espacio1;
    private java.awt.Label espacio2;
    private java.awt.Label espacio3;
    private java.awt.Label especie;
    private java.awt.Label habilidad;
    private java.awt.Label habitat;
    private javax.swing.JPanel imagenPokemon;
    private javax.swing.JButton izq;
    private javax.swing.JLabel jLabel2;
    private java.awt.Label mov1;
    private java.awt.Label mov2;
    private java.awt.Label mov3;
    private java.awt.Label mov4;
    private java.awt.Label movimientos;
    private java.awt.Label nombrePokemon;
    private java.awt.Label numPokedex;
    private java.awt.Label peso;
    private javax.swing.JCheckBox shiny;
    private java.awt.Label tipo;
    // End of variables declaration//GEN-END:variables
}
